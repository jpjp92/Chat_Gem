name: Enhanced Streamlit Keep Awake

on:
  schedule:
    - cron: "*/45 * * * *"  # 45Î∂ÑÎßàÎã§ Ïã§Ìñâ (Îçî ÏûêÏ£º)
  workflow_dispatch:

env:
  STREAMLIT_URL: ${{ secrets.STREAMLIT_URL }}
  STREAMLIT_URLS: ${{ secrets.STREAMLIT_URLS }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  enhanced-ping:
    runs-on: ubuntu-latest
    steps:
      - name: Enhanced Streamlit Keep-Awake
        run: |
          # URL ÏÑ§Ï†ï
          URLS="$STREAMLIT_URLS"
          if [ -z "$URLS" ]; then
            URLS="$STREAMLIT_URL"
          fi
          if [ -z "$URLS" ]; then
            URLS="https://assistant-gemini25.streamlit.app,https://mbti-multi.streamlit.app,https://ko-chat-bot25.streamlit.app"
            echo "Using default URL list"
          fi

          if [ -z "$URLS" ]; then
            echo "No URLs configured"
            exit 1
          fi

          IFS=',' read -ra ADDR <<< "$URLS"
          FAILED=()

          enhanced_check() {
            raw="$1"
            URL=$(echo "$raw" | sed -e 's/^\s*//' -e 's/\s*$//')
            URL="${URL%/}"
            echo "\n=== Enhanced check for: $URL ==="

            # 1. Ï¥àÍ∏∞ ÏöîÏ≤≠ÏúºÎ°ú Ïï± Íπ®Ïö∞Í∏∞
            echo "Step 1: Initial wake-up request"
            curl -s -L --max-time 30 \
              -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
              -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" \
              -H "Accept-Language: en-US,en;q=0.5" \
              -H "Cache-Control: no-cache" \
              "$URL" > /dev/null || true

            # 2. ÏßßÏùÄ ÎåÄÍ∏∞
            echo "Waiting 5 seconds..."
            sleep 5

            # 3. Ï†ïÏ†Å Î¶¨ÏÜåÏä§ ÏöîÏ≤≠Îì§ (Îçî ÌòÑÏã§Ï†ÅÏù∏ Î∏åÎùºÏö∞Ï†Ä ÌñâÎèô Î™®Î∞©)
            echo "Step 2: Requesting static resources"
            curl -s -L --max-time 20 \
              -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
              "$URL/_stcore/static/css/bootstrap.min.css" > /dev/null 2>&1 || true
            
            curl -s -L --max-time 20 \
              -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
              "$URL/favicon.ico" > /dev/null 2>&1 || true

            # 4. Î©îÏù∏ Ìó¨Ïä§ Ï≤¥ÌÅ¨ (ÏÉÅÏÑ∏ ÎîîÎ≤ÑÍπÖ)
            echo "Step 3: Main health check with detailed debugging"
            max_attempts=3
            success=0
            
            for attempt in $(seq 1 $max_attempts); do
              echo "Health check attempt $attempt/$max_attempts"
              
              # ÏÉÅÏÑ∏Ìïú curl Ï†ïÎ≥¥ ÏàòÏßë
              response=$(curl -s -L --max-time 45 \
                -w "HTTPSTATUS:%{http_code};TIME:%{time_total};REDIRECT:%{redirect_url};EFFECTIVE:%{url_effective}" \
                -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" \
                -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8" \
                -H "Accept-Language: en-US,en;q=0.9" \
                -H "Accept-Encoding: gzip, deflate, br" \
                -H "DNT: 1" \
                -H "Connection: keep-alive" \
                -H "Upgrade-Insecure-Requests: 1" \
                "$URL" 2>/dev/null || echo "HTTPSTATUS:000;TIME:0;REDIRECT:;EFFECTIVE:")

              http_code=$(echo "$response" | sed -n 's/.*HTTPSTATUS:\([0-9]*\).*/\1/p')
              time_total=$(echo "$response" | sed -n 's/.*TIME:\([0-9.]*\).*/\1/p')
              redirect_url=$(echo "$response" | sed -n 's/.*REDIRECT:\([^;]*\).*/\1/p')
              effective_url=$(echo "$response" | sed -n 's/.*EFFECTIVE:\([^;]*\).*/\1/p')
              
              echo "HTTP: $http_code, Time: ${time_total}s"
              echo "Original URL: $URL"
              echo "Effective URL: $effective_url"
              echo "Redirect URL: $redirect_url"
              
              # Ï∂îÍ∞Ä Í≤ÄÏ¶ù: Ïã§Ï†ú HTTP ÏùëÎãµ Ìó§Îçî ÌôïÏù∏
              echo "Getting response headers..."
              headers=$(curl -I -s --max-time 20 "$URL" | head -5)
              echo "Response headers: $headers"
              
              if [[ "$http_code" =~ ^[23] ]]; then
                if [[ "$http_code" =~ ^3 ]]; then
                  echo "‚ö†Ô∏è  Redirect response (HTTP $http_code) - host responding"
                else
                  echo "‚úÖ Success (HTTP $http_code)"
                fi
                success=1
                break
              else
                echo "‚ùå Failed attempt $attempt (HTTP $http_code)"
                if [ $attempt -lt $max_attempts ]; then
                  echo "‚è≥ Waiting 10 seconds before retry..."
                  sleep 10
                fi
              fi
            done

            # 5. Ï∂îÍ∞Ä Ïù∏ÌÑ∞ÎûôÏÖò ÏãúÎÆ¨Î†àÏù¥ÏÖò
            if [ $success -eq 1 ]; then
              echo "Step 4: Simulating user interaction"
              # Streamlit ÌäπÌôî ÏöîÏ≤≠Îì§
              curl -s --max-time 15 \
                -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
                "$URL/_stcore/health" > /dev/null 2>&1 || true
                
              sleep 2
              
              # Ìïú Î≤à Îçî Î©îÏù∏ ÌéòÏù¥ÏßÄ ÏöîÏ≤≠
              curl -s -L --max-time 20 \
                -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
                -H "Referer: $URL" \
                "$URL" > /dev/null 2>&1 || true
                
              echo "‚úÖ Enhanced check completed for $URL"
            else
              echo "‚ùå All attempts failed for $URL"
              FAILED+=("$URL")
            fi
          }

          # Î™®Îì† URLÏóê ÎåÄÌï¥ Ìñ•ÏÉÅÎêú Ï≤¥ÌÅ¨ Ïã§Ìñâ
          for raw in "${ADDR[@]}"; do
            enhanced_check "$raw"
            # URL Í∞Ñ Í∞ÑÍ≤©
            sleep 3
          done

          # Í≤∞Í≥º Ï≤òÎ¶¨
          if [ ${#FAILED[@]} -ne 0 ]; then
            echo "\n‚ùå Failed URLs: ${FAILED[*]}"
            if [ -n "$SLACK_WEBHOOK" ]; then
              timestamp=$(date '+%Y-%m-%d %H:%M:%S UTC')
              text="üö® *Streamlit Keep-Awake Alert*\n\n*Time:* $timestamp\n*Failed URLs:* ${FAILED[*]}\n\nThese apps may have gone to sleep and need attention."
              payload="{\"text\":\"$text\"}"
              curl -s -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK" || true
            fi
            exit 1
          else
            echo "\n‚úÖ All URLs are healthy and awake!"
          fi