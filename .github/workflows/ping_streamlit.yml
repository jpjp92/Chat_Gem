name: Keep Streamlit App Awake

on:
  schedule:
    - cron: "0 * * * *"    # Îß§ÏãúÍ∞Ñ Ï†ïÍ∞Å Ïã§Ìñâ (UTC Í∏∞Ï§Ä)
  workflow_dispatch:        # ÏàòÎèô Ïã§Ìñâ ÌóàÏö©

env:
  # Í∂åÏû•: Ïã§Ï†ú URLÏùÄ GitHub SecretsÏóê STREAMLIT_URLÎ°ú Ï†ÄÏû•
  STREAMLIT_URL: ${{ secrets.STREAMLIT_URL }}

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Quick ping (HTTP status)
        run: |
          URL="${{ secrets.STREAMLIT_URL }}"
          # trailing slash Ï†úÍ±∞
          URL="${URL%/}"
          echo "üèÉ‚Äç‚ôÇÔ∏è Quick ping -> $URL"
          http_code=$(curl -s -o /dev/null -w "%{http_code}" -L --max-time 10 "$URL" || echo "000")
          echo "üì° Response code: $http_code"
          if [[ "$http_code" =~ ^[23] ]]; then
            if [[ "$http_code" =~ ^3 ]]; then
              echo "‚ö†Ô∏è Redirect response (HTTP $http_code) ‚Äî app may require login but host is responding."
            else
              echo "‚úÖ App is awake (HTTP $http_code)"
            fi
          else
            echo "‚ùå App returned HTTP $http_code"
          fi

      - name: Health check with retry
        run: |
          URL="${{ secrets.STREAMLIT_URL }}"
          URL="${URL%/}"
          max_attempts=3
          attempt=1
          wait_seconds=30

          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt/$max_attempts -> $URL"
            http_code=$(curl -s -o /dev/null -w "%{http_code}" -L --max-time 10 --retry 2 --retry-delay 5 --retry-connrefused "$URL" || echo "000")
            echo "HTTP $http_code"
            if [[ "$http_code" =~ ^[23] ]]; then
              if [[ "$http_code" =~ ^3 ]]; then
                echo "‚ö†Ô∏è Redirect on attempt $attempt (HTTP $http_code) ‚Äî app may require login but host is responding."
              else
                echo "‚úÖ Success on attempt $attempt (HTTP $http_code)"
              fi
              exit 0
            else
              echo "‚ö†Ô∏è Attempt $attempt failed ($http_code)"
              if [ $attempt -lt $max_attempts ]; then
                echo "‚è≥ Waiting $wait_seconds seconds..."
                sleep $wait_seconds
              fi
            fi
            attempt=$((attempt + 1))
          done

          echo "‚ùå All attempts failed"
          exit 1

      - name: Notify failure to Slack (optional)
        if: failure()
        run: |
          SLACK_WEBHOOK="${{ secrets.SLACK_WEBHOOK }}"
          if [ -z "$SLACK_WEBHOOK" ]; then
            echo "No SLACK_WEBHOOK set; skipping Slack notification."
            exit 0
          fi
          URL="${{ secrets.STREAMLIT_URL }}"
          payload="{\"text\":\"[Keep-Awake] Streamlit health check FAILED for ${URL}\"}"
          curl -s -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK" || true
